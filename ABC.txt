import pandas as pd

# Load your data into DataFrames
# Replace these with your actual data loading method
tbl_limits_df = pd.read_csv('tbl_limits.csv')  # Replace with your actual data source
facilities_df = pd.read_csv('facilities.csv')  # Replace with your actual data source
availability_status_df = pd.read_csv('availability_status.csv')  # Replace with your actual data source

# Step 1: Perform the first left join between tbl_limits_df and facilities_df
merged_df = pd.merge(tbl_limits_df, facilities_df, left_on='LINE_CD_2', right_on='facility_id', how='left')

# Step 2: Perform the second left join with availability_status_df
merged_df = pd.merge(merged_df, availability_status_df, left_on='availability_status', right_on='Availability Status Cd', how='left')

# Step 3: Apply the filter conditions specified in the HAVING clause
filtered_df = merged_df[
    (
        (merged_df['LIMIT_AMOUNT'] > 0) &
        (merged_df['MAKER_ID'] != "RAPUPLD") &
        (merged_df['RECORD_STAT'] == "0")
    ) |
    (
        (merged_df['DAYLIGHT_OD_LIMIT'] > 0) &
        (merged_df['MAKER_ID'] != "RAPUPLD") &
        (merged_df['RECORD_STAT'] == "0")
    )
]

# Step 4: Select the columns specified in the SELECT clause
result_df = filtered_df[[
    'LIAB_ID', 'LINE_CD_2', 'LINE_SERIAL', 'MAIN_LINE', 'AVAILABILITY_FLAG', 
    'UTILISATION', 'LIMIT_AMOUNT', 'DAYLIGHT_OD_LIMIT', 'INTERNAL_REMARKS', 
    'MAKER_ID', 'KEY', 'RECORD_STAT', 'LINE_START_DATE', 'LINE_EXPIRY_DATE', 
    'CHECKER_DT_STAMP', 'Availability Status Nm'
]]

# Step 5: Optionally, you can group by if needed, though it typically doesn't change data unless aggregations are performed
# In this case, grouping may be unnecessary if not applying an aggregation function
grouped_df = result_df.groupby([
    'LIAB_ID', 'LINE_CD_2', 'LINE_SERIAL', 'MAIN_LINE', 'AVAILABILITY_FLAG', 
    'UTILISATION', 'LIMIT_AMOUNT', 'DAYLIGHT_OD_LIMIT', 'INTERNAL_REMARKS', 
    'MAKER_ID', 'KEY', 'RECORD_STAT', 'LINE_START_DATE', 'LINE_EXPIRY_DATE', 
    'CHECKER_DT_STAMP', 'Availability Status Nm'
], as_index=False).first()  # .first() keeps the first occurrence of each group, if needed

# Step 6: Sort the resulting DataFrame by 'LIAB_ID'
sorted_df = grouped_df.sort_values(by='LIAB_ID')

# Display the final result
print(sorted_df)
